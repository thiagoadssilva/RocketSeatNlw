{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/rocketSeatNlw/frontend/src/pages/episodes/[slug].tsx\";\nimport styles from './episode.module.scss';\nimport Image from 'next/image';\nexport var __N_SSG = true;\nexport default function Episode(_ref) {\n  var episode = _ref.episode;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.episode,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.thumbnailContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/arrow-left.svg\",\n          alt: \"Voltar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        width: \"700\",\n        height: \"160\",\n        src: episode.thumbnail,\n        objectFit: \"cover\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = Episode;\n\nvar _c;\n\n$RefreshReg$(_c, \"Episode\");","map":{"version":3,"sources":["/var/www/rocketSeatNlw/frontend/src/pages/episodes/[slug].tsx"],"names":["styles","Image","Episode","episode","thumbnailContainer","thumbnail"],"mappings":";;AAMA,OAAOA,MAAP,MAAmB,uBAAnB;AACA,OAAOC,KAAP,MAAkB,YAAlB;;AAkBA,eAAe,SAASC,OAAT,OAA2C;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAExD,sBACE;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACG,OAAvB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACI,kBAAvB;AAAA,8BACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA,+BACE;AAAK,UAAA,GAAG,EAAC,iBAAT;AAA2B,UAAA,GAAG,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC,KAAb;AAAmB,QAAA,MAAM,EAAC,KAA1B;AAAgC,QAAA,GAAG,EAAED,OAAO,CAACE,SAA7C;AAAwD,QAAA,SAAS,EAAC;AAAlE;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;KAduBH,O","sourcesContent":["import { parseISO,format } from \"date-fns\";\nimport { ptBR } from \"date-fns/locale\";\nimport { GetStaticPaths, GetStaticProps } from \"next\";\nimport { useRouter } from \"next/router\";\nimport { api } from \"../../services/api\";\nimport { convertDuranteTotimeString } from \"../../utils/convertDuranteTotimeString\";\nimport styles from './episode.module.scss';\nimport Image from 'next/image';\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  description: string;\n  members: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n};\n\ntype EpisodeProps = {\n  episode: Episode;\n};\n\nexport default function Episode( {episode}: EpisodeProps) {\n\n  return(\n    <div className={styles.episode}>\n      <div className={styles.thumbnailContainer}>\n        <button type=\"button\">\n          <img src=\"/arrow-left.svg\" alt=\"Voltar\"/>\n        </button>\n\n        <Image width=\"700\" height=\"160\" src={episode.thumbnail} objectFit=\"cover\"/>\n      </div>\n    </div>\n\n  );\n}\n\nexport const getStaticPaths: GetStaticPaths = async () =>{\n  return{\n    paths:[],\n    fallback: 'blocking'\n  }\n} \n\nexport const getStaticProps: GetStaticProps = async (context) => {\n  const { slug } = context.params;\n  const { data } = await api.get(`/episodes/${slug}`);\n\n  const episode = {\n    id: data.id,\n    title: data.title,\n    thumbnail: data.thumbnail,\n    members: data.members,\n    publishedAt: format(parseISO(data.published_at), \"d MMM yy\", { locale: ptBR,}),\n    duration: Number(data.file.duration),\n    durationAsString: convertDuranteTotimeString(Number(data.file.duration)),\n    description: data.description,\n    url: data.file.url,\n  };\n\n  return {\n    props: {\n      episode,\n    },\n    revalidate: 60 * 60 * 24, // Recarregar a pagina depois de 24 horas\n  };\n};\n"]},"metadata":{},"sourceType":"module"}