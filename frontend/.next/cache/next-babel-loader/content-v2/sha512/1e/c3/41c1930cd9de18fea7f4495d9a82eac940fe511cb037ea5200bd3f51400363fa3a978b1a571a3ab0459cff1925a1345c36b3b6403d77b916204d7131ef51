{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/var/www/rocketSeatNlw/frontend/src/pages/index.tsx\";\n//import { useEffect } from \"react\";\nimport { api } from \"../services/api\";\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport { format, parseISO } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { convertDuranteTotimeString } from \"../utils/convertDuranteTotimeString\";\nimport styles from \"../../styles/home.module.scss\";\nexport default function Home({\n  latesEpisodes,\n  allEpisodes\n}) {\n  // INICIO - Chamanda para uma api usando SPA - SINGLE PAGE APPLICATION\n  // useEffect(() =>{\n  //   fetch('http://localhost:3333/episodes')\n  //     .then(response => response.json())\n  //     .then(data => console.log(data))\n  // }, []);\n  // FIM - Chamanda para uma api usando SPA\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.homePage,\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.latesEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xDAltimos Lan\\xE7amentos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: latesEpisodes.map(uniqEpisode => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(Image // Componente novo para rederizar as imagens, é obrigatório os atributos (width e heiht)\n            , {\n              width: 192,\n              height: 192,\n              objectFit: \"cover\",\n              src: uniqEpisode.thumbnail,\n              alt: uniqEpisode.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.episodesDetails,\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                href: `/episodes/${uniqEpisode.id}`,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  children: uniqEpisode.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: uniqEpisode.members\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: uniqEpisode.publishedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: uniqEpisode.durationAsString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: \"/play-green.svg\",\n                alt: \"Tocar Epis\\xF3dio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, uniqEpisode.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styles.allEpisodes,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Todos epis\\xF3dios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        cellSpacing: 0,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Podcast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Integrantes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Data\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Dura\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allEpisodes.map(episode => {\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: 72\n                },\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  width: 120,\n                  height: 120,\n                  src: episode.thumbnail,\n                  alt: episode.title,\n                  objectFit: \"cover\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  href: `/episodes/${episode.id}`,\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    children: episode.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: episode.members\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  width: 100\n                },\n                children: episode.publishedAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: episode.durationAsString\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: \"/play-green.svg\",\n                    alt: \"Tocar epis\\xF3dio\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this)]\n            }, episode.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n} // INICIO -  Chamanda para uma api usando SSR  - SERVER SIDE REDERING\n// export async function getServerSideProps() {\n//   const response  = await fetch(\"http://localhost:3333/episodes\")\n//   const data = await response.json();\n//   return{\n//     props: {\n//       episodes: data,\n//     }\n//   }\n// }\n// FIM -  Chamanda para uma api usando SSR  - SERVER SIDE REDERING\n// INICIO -  Chamanda para uma api usando SSG - SERVER SIDE GENERATION\n\nexport const getStaticProps = async () => {\n  const {\n    data\n  } = await api.get(\"episodes\", {\n    params: {\n      _limit: 12,\n      _sort: \"published_at\",\n      _order: \"desc\"\n    }\n  });\n  const episodes = data.map(episode => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), \"d MMM yy\", {\n        locale: ptBR\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDuranteTotimeString(Number(episode.file.duration)),\n      description: episode.description,\n      url: episode.file.url\n    };\n  });\n  const latesEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n  return {\n    props: {\n      latesEpisodes,\n      allEpisodes\n    },\n    revalidate: 60 * 60 * 8\n  };\n}; // FIM -  Chamanda para uma api usando SSR - SERVER SIDE GENERATION","map":{"version":3,"sources":["/var/www/rocketSeatNlw/frontend/src/pages/index.tsx"],"names":["api","Link","Image","format","parseISO","ptBR","convertDuranteTotimeString","styles","Home","latesEpisodes","allEpisodes","homePage","map","uniqEpisode","thumbnail","title","episodesDetails","id","members","publishedAt","durationAsString","episode","width","getStaticProps","data","get","params","_limit","_sort","_order","episodes","published_at","locale","duration","Number","file","description","url","slice","length","props","revalidate"],"mappings":"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","sourcesContent":["//import { useEffect } from \"react\";\nimport { GetStaticProps } from \"next\";\nimport { api } from \"../services/api\";\nimport Link from \"next/link\";\n\nimport Image from \"next/image\";\n\nimport { format, parseISO } from \"date-fns\";\nimport ptBR from \"date-fns/locale/pt-BR\";\nimport { convertDuranteTotimeString } from \"../utils/convertDuranteTotimeString\";\n\nimport styles from \"../../styles/home.module.scss\";\n\ntype Episode = {\n  id: string;\n  title: string;\n  thumbnail: string;\n  description: string;\n  members: string;\n  duration: number;\n  durationAsString: string;\n  url: string;\n  publishedAt: string;\n};\n\ntype HomeProps = {\n  latesEpisodes: Episode[];\n  allEpisodes: Episode[];\n};\n\nexport default function Home({ latesEpisodes, allEpisodes }: HomeProps) {\n  // INICIO - Chamanda para uma api usando SPA - SINGLE PAGE APPLICATION\n  // useEffect(() =>{\n  //   fetch('http://localhost:3333/episodes')\n  //     .then(response => response.json())\n  //     .then(data => console.log(data))\n  // }, []);\n  // FIM - Chamanda para uma api usando SPA\n  return (\n    <div className={styles.homePage}>\n      <section className={styles.latesEpisodes}>\n        <h2>Últimos Lançamentos</h2>\n\n        <ul>\n          {latesEpisodes.map((uniqEpisode) => {\n            return (\n              <li key={uniqEpisode.id}>\n                <Image // Componente novo para rederizar as imagens, é obrigatório os atributos (width e heiht)\n                  width={192}\n                  height={192}\n                  objectFit=\"cover\"\n                  src={uniqEpisode.thumbnail}\n                  alt={uniqEpisode.title}\n                />\n\n                <div className={styles.episodesDetails}>\n                  <Link href={`/episodes/${uniqEpisode.id}`}>\n                    <a>{uniqEpisode.title}</a>\n                  </Link>\n                  <p>{uniqEpisode.members}</p>\n                  <span>{uniqEpisode.publishedAt}</span>\n                  <span>{uniqEpisode.durationAsString}</span>\n                </div>\n\n                <button type=\"button\">\n                  <img src=\"/play-green.svg\" alt=\"Tocar Episódio\" />\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n\n      <section className={styles.allEpisodes}>\n        <h2>Todos episódios</h2>\n\n        <table cellSpacing={0}>\n          <thead>\n            <th></th>\n            <th>Podcast</th>\n            <th>Integrantes</th>\n            <th>Data</th>\n            <th>Duração</th>\n            <th></th>\n          </thead>\n\n          <tbody>\n            {allEpisodes.map((episode) => {\n              return (\n                <tr key={episode.id}>\n                  <td style={{ width: 72 }}>\n                    <Image\n                      width={120}\n                      height={120}\n                      src={episode.thumbnail}\n                      alt={episode.title}\n                      objectFit=\"cover\"\n                    />\n                  </td>\n                  <td>\n                  <Link href={`/episodes/${episode.id}`}>\n                    <a>{episode.title}</a>\n                  </Link>\n                  </td>\n                  <td>{episode.members}</td>\n                  <td style={{ width: 100 }}>{episode.publishedAt}</td>\n                  <td>{episode.durationAsString}</td>\n                  <td>\n                    <button type=\"button\">\n                      <img src=\"/play-green.svg\" alt=\"Tocar episódio\" />\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </section>\n    </div>\n  );\n}\n\n// INICIO -  Chamanda para uma api usando SSR  - SERVER SIDE REDERING\n// export async function getServerSideProps() {\n//   const response  = await fetch(\"http://localhost:3333/episodes\")\n//   const data = await response.json();\n\n//   return{\n//     props: {\n//       episodes: data,\n//     }\n//   }\n// }\n// FIM -  Chamanda para uma api usando SSR  - SERVER SIDE REDERING\n\n// INICIO -  Chamanda para uma api usando SSG - SERVER SIDE GENERATION\nexport const getStaticProps: GetStaticProps = async () => {\n  const { data } = await api.get(\"episodes\", {\n    params: {\n      _limit: 12,\n      _sort: \"published_at\",\n      _order: \"desc\",\n    },\n  });\n\n  const episodes = data.map((episode) => {\n    return {\n      id: episode.id,\n      title: episode.title,\n      thumbnail: episode.thumbnail,\n      members: episode.members,\n      publishedAt: format(parseISO(episode.published_at), \"d MMM yy\", {\n        locale: ptBR,\n      }),\n      duration: Number(episode.file.duration),\n      durationAsString: convertDuranteTotimeString(\n        Number(episode.file.duration)\n      ),\n      description: episode.description,\n      url: episode.file.url,\n    };\n  });\n\n  const latesEpisodes = episodes.slice(0, 2);\n  const allEpisodes = episodes.slice(2, episodes.length);\n\n  return {\n    props: {\n      latesEpisodes,\n      allEpisodes,\n    },\n    revalidate: 60 * 60 * 8,\n  };\n};\n// FIM -  Chamanda para uma api usando SSR - SERVER SIDE GENERATION\n"]},"metadata":{},"sourceType":"module"}